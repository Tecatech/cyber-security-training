using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using repon.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace repon.Controllers
{
    public class AccountController : Controller
    {
        private readonly ILogger<AccountController> _logger;
        private readonly IWebHostEnvironment _env;
        private const string alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890";

        public AccountController(ILogger<AccountController> logger, IWebHostEnvironment env)
        {
            _logger = logger;
            _env = env;
        }

        [HttpGet]
        public IActionResult Register()
        {
            RegisterModel registerModel = new RegisterModel();
            return View(registerModel);
        }

        [HttpPost]
        public async Task<IActionResult> Register(string username, string password, string taxi)
        {
            if (taxi == "on")
                taxi = "checked";
            else
                taxi = "";
            RegisterModel reg = new RegisterModel() { Taxi = taxi, Password = password, Name = username };
            bool bTaxi = taxi == "checked";
            if (username == "" || password == "" || password == null || username == null)
            {
                reg.Error = "Эмм, не надо пустоту кидать.";
                return View(reg);
            }
            IEnumerable<char> validChars;
            validChars = username.Where(simbol => alphabet.Contains(simbol));
            if (username != new string(validChars.ToArray()))
            {
                reg.Error = "Назовись нормально.";
                return View(reg);
            }
            validChars = password.Where(simbol => alphabet.Contains(simbol));
            if (password != new string(validChars.ToArray()))
            {
                reg.Error = "Пароль нормальным сделай.";
                return View(reg);
            }
            using (ReponContext db = new ReponContext())
            {
                User user = db.Users.FirstOrDefault(user => user.Name == username);
                if (user == null)
                {
                    user = new User() { Name = username, Password = ReponHash.ComputeHash(password), Money = 0, Taxi = bTaxi };
                    db.Users.Add(user);
                    db.SaveChanges();
                    await ReponAuth.Authenticate(HttpContext, bTaxi, username);
                    if (!user.Taxi)
                        Redirect("/user/profile");
                    return Redirect("/Home/Index");
                }
                else
                {
                    reg.Error = "Ужу сущуствуут.";
                }
            }
            return View(reg);
        }

        [HttpGet]
        public IActionResult Login()
        {
            LoginModel registerModel = new LoginModel();
            return View(registerModel);
        }

        [HttpPost]
        public async Task<IActionResult> Login(string username, string password)
        {
            LoginModel reg = new LoginModel() { Password = password, Name = username };
            if (username == "" || password == "" || password == null || username == null)
            {
                reg.Error = "Эмм, не надо пустоту кидать.";
                return View(reg);
            }
            using (ReponContext db = new ReponContext())
            {
                User user = db.Users.FirstOrDefault(user => user.Name == username);
                if (user == null)
                {
                    reg.Error = "Nofany.";
                }
                else if (user.Password == ReponHash.ComputeHash(password))
                {
                    await ReponAuth.Authenticate(HttpContext, user.Taxi, username);
                    if (!user.Taxi)
                        Redirect("/user/profile");
                    return Redirect("/Home/Index");
                }
                else
                {
                    reg.Error = "PASS IS WRONK.";
                }
            }
            return View(reg);
        }
    }
}

import MySQLdb
import random

connection = MySQLdb.connect(
    host = "mysql",
    user = "bartender",
    passwd = "bottle_of_whiskey_plz",
    db = "winner-bar",
)

cursor = connection.cursor()

def user_exists(username):
    query = "SELECT id FROM users WHERE username=%s"
    cursor.execute(query, (username,))

    user = cursor.fetchone()
    return user

def add_user(username, password):
    query = "INSERT INTO users (username, password) VALUES (%s, %s)"
    cursor.execute(query, (username, password, ))

    connection.commit()

def verify_user(username, password):
    query = "SELECT id FROM users WHERE username=%s and password=%s"
    cursor.execute(query, (username, password))

    user = cursor.fetchone()
    return user


def save_bottle(bottle, username):
    query = "INSERT INTO bottles (bottle_name, username, bottle_secret) VALUES (%s, %s, %s)"
    cursor.execute(query, (bottle, username, generate_secret()))

    connection.commit()


def get_bottles(username):
    query = "SELECT bottle_name, bottle_secret, id FROM bottles WHERE username=%s"
    cursor.execute(query, (username, ))

    bottles = cursor.fetchall()
    return bottles


def get_bottle_by_name(bottle_name):
    query = "SELECT bottle_name, bottle_secret, id, username FROM bottles WHERE bottle_name=%s"
    cursor.execute(query, (bottle_name, ))
    bottle = cursor.fetchone()
    return bottle





def get_cocktails(username):
    query = "SELECT cocktail_name, first, second, cocktail_known, id FROM cocktails WHERE username=%s"
    cursor.execute(query, (username, ))

    cocktails = cursor.fetchall()
    return cocktails



def save_cocktail(cocktail_name, first, second, username, description):

    first_bottle = get_bottle_by_name(first)
    second_bottle = get_bottle_by_name(second)

    if first_bottle == None or second_bottle == None:
        return "No such bottle"
    fs = first_bottle[1]
    ss = second_bottle[1]

    cocktail_known, cocktail_secret = secret_formula(fs, ss)

    query = "INSERT INTO cocktails (cocktail_name, username, first, second, cocktail_secret, cocktail_known, description) VALUES (%s, %s, %s, %s, %s, %s, %s)"
    cursor.execute(query, (cocktail_name, username, first, second, cocktail_secret, cocktail_known, description,))
    connection.commit()
    return ""

def get_bottle_by_name_and_user(bottle_name, username):
    query = "SELECT bottle_name, bottle_secret, id, username FROM bottles WHERE bottle_name=%s and username=%s"
    cursor.execute(query, (bottle_name, username,))
    bottle = cursor.fetchone()
    return bottle

def add_shared_bottle(share_to, share_from, bottle):
    bottle_to_share = get_bottle_by_name_and_user(bottle, share_from)
    if bottle_to_share == None:
        return "No such bottle"
    query = "INSERT INTO bottles (bottle_name, username, bottle_secret) VALUES (%s, %s, %s)"
    cursor.execute(query, (bottle, share_to, bottle_to_share[1],))

    connection.commit()
    return "Successfully shared bottle"


def get_all_cocktails():
    query = "SELECT cocktail_name, first, second, username, cocktail_known, id FROM cocktails"
    cursor.execute(query)

    cocktails = cursor.fetchall()
    connection.commit()
    return cocktails

def get_cocktail_by_id(id):
    query = "SELECT cocktail_name, first, second, username, cocktail_known, id, cocktail_secret, description FROM cocktails where id=%s"
    cursor.execute(query, (id, ))

    cocktail = cursor.fetchone()
    connection.commit()
    return cocktail

def secret_formula(first, second):
    known = first*second
    key = (first-1)*(second-1)
    return known, key



























































































































































































def generate_secret():
    secret_list = []
    for n in range(100, 250):
        isSecret = True
        for num in range(2, n):
            if n % num == 0:
                isSecret = False

        if isSecret:
            secret_list.append(n)

    return random.choice(secret_list)

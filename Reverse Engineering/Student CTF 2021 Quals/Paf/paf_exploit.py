#!/usr/bin/env python3
from pwn import *
from unicorn import *
from unicorn.x86_const import *

exe = './paf.elf'

with open(exe, 'rb') as f:
    data = f.read()

base_address = 0x400000
stack_address = 0x0
stack_size = 1024 * 1024 * 2

uc = Uc(UC_ARCH_X86, UC_MODE_64)

uc.mem_map(base_address, stack_size)
uc.mem_map(stack_address, stack_size)

uc.mem_write(base_address, data)
uc.reg_write(UC_X86_REG_RSP, stack_address)

flag = ''

def hook_code(uc, address, size, data):
    global flag
    
    code = uc.mem_read(address, size)
    
    if address == 0x401d6a:
        uc.reg_write(UC_X86_REG_R8, 2)
        r8 = uc.reg_read(UC_X86_REG_R8)
    
    if address == 0x401d7e:
        rax = uc.reg_read(UC_X86_REG_RAX)
        flag += bytes.fromhex(hex(rax)[2:])[::-1].decode()
        uc.reg_write(UC_X86_REG_R10, stack_address)
        uc.mem_write(stack_address, p64(rax))
    
    if address == 0x401d8d:
        rax = uc.reg_read(UC_X86_REG_RAX)
        flag += bytes.fromhex(hex(rax)[2:])[::-1].decode()
        uc.reg_write(UC_X86_REG_R10, stack_address)
        uc.mem_write(stack_address + 8, p64(rax))

uc.hook_add(UC_HOOK_CODE, hook_code)
uc.emu_start(0x400080, 0x401dab)

print(flag)